name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    env:
      DATABASE_URL: sqlite:///./ci.db
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show environment info
        run: |
          . .venv/bin/activate
          python -V
          pip list
          python -c "import os, pathlib; print('CWD', os.getcwd()); print('DB URL', os.getenv('DATABASE_URL')); print('Alembic versions', [p.name for p in pathlib.Path('alembic/versions').glob('*.py')])"

      - name: Run Alembic upgrade (pre-test)
        run: |
          . .venv/bin/activate
          alembic upgrade head

      - name: Lint
        run: |
          . .venv/bin/activate
          ruff check .

      - name: Run tests
        env:
          ENV: test
        run: |
          . .venv/bin/activate
          pytest -q --junitxml=test-results.xml || EXIT_CODE=$?
          echo "Pytest exit code: ${EXIT_CODE:-0}"
          exit ${EXIT_CODE:-0}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: backend/test-results.xml
